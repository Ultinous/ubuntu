diff --git a/libavcodec/avcodec.h b/libavcodec/avcodec.h
index 18c3e3e..b627a37 100644
--- a/libavcodec/avcodec.h
+++ b/libavcodec/avcodec.h
@@ -1698,6 +1698,8 @@ typedef struct AVPacket {
 
     int64_t pos;                            ///< byte position in stream, -1 if unknown
 
+    int64_t rtp_ntp_timestamp;  /// Camera NTP time in microseconds since 1970-01-01, 0 if unknown
+
 #if FF_API_CONVERGENCE_DURATION
     /**
      * @deprecated Same as the duration field, but as int64_t. This was required
diff --git a/libavcodec/avpacket.c b/libavcodec/avpacket.c
index d1f4ea9..e7e4228 100644
--- a/libavcodec/avpacket.c
+++ b/libavcodec/avpacket.c
@@ -46,6 +46,7 @@ FF_ENABLE_DEPRECATION_WARNINGS
     pkt->buf                  = NULL;
     pkt->side_data            = NULL;
     pkt->side_data_elems      = 0;
+    pkt->rtp_ntp_timestamp    = 0;
 }
 
 AVPacket *av_packet_alloc(void)
diff --git a/libavformat/rtpdec.c b/libavformat/rtpdec.c
index 4acb1ca..36b060f 100644
--- a/libavformat/rtpdec.c
+++ b/libavformat/rtpdec.c
@@ -575,6 +575,24 @@ void ff_rtp_parse_set_crypto(RTPDemuxContext *s, const char *suite,
  */
 static void finalize_packet(RTPDemuxContext *s, AVPacket *pkt, uint32_t timestamp)
 {
+    if(s->last_rtcp_ntp_time && s->last_rtcp_timestamp && timestamp != RTP_NOTS_VALUE)
+    {
+        union {
+          uint64_t ntp;
+          struct {
+            uint32_t frac;
+            uint32_t secs;
+          };
+        } decomposer;
+        AVRational usec_ratio = {1, 1000000};
+
+        decomposer.ntp = s->last_rtcp_ntp_time;
+        int64_t ntp_usecs = (decomposer.secs - 2208988800) * 1000000 + av_rescale(decomposer.frac, 1000000, 4294967296);
+        int64_t dt = timestamp - s->last_rtcp_timestamp;
+        int64_t dt_usecs = av_rescale_q(dt, s->st->time_base, usec_ratio);
+        pkt->rtp_ntp_timestamp = ntp_usecs + dt_usecs;
+    }
+
     if (pkt->pts != AV_NOPTS_VALUE || pkt->dts != AV_NOPTS_VALUE)
         return; /* Timestamp already set by depacketizer */
     if (timestamp == RTP_NOTS_VALUE)
