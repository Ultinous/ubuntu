Description: use packaged Google Test and Google Mock libraries
 Link tests with the already compiled libraries.
Forwarded: not-needed
Author: Laszlo Boszormenyi (GCS) <gcs@debian.org>
Last-Update: 2018-05-29

---

Index: protobuf-3.5.2/Makefile.am
===================================================================
--- protobuf-3.5.2.orig/Makefile.am
+++ protobuf-3.5.2/Makefile.am
@@ -17,9 +17,9 @@ DIST_SUBDIRS = $(subdirs) src conformanc
 # want "make install" to recurse into gmock since we don't want to overwrite
 # the installed version of gmock if there is one.
 check-local:
-	@echo "Making lib/libgmock.a lib/libgmock_main.a in gmock"
-	@cd gmock && $(MAKE) $(AM_MAKEFLAGS) lib/libgmock.la lib/libgmock_main.la
-	@cd gmock/gtest && $(MAKE) $(AM_MAKEFLAGS) lib/libgtest.la lib/libgtest_main.la
+	@echo "NOT making lib/libgmock.a lib/libgmock_main.a in gmock"
+#	@cd gmock && $(MAKE) $(AM_MAKEFLAGS) lib/libgmock.la lib/libgmock_main.la
+#	@cd gmock/gtest && $(MAKE) $(AM_MAKEFLAGS) lib/libgtest.la lib/libgtest_main.la
 
 # We would like to clean gmock when "make clean" is invoked.  But we have to
 # be careful because clean-local is also invoked during "make distclean", but
Index: protobuf-3.5.2/src/Makefile.am
===================================================================
--- protobuf-3.5.2.orig/src/Makefile.am
+++ protobuf-3.5.2/src/Makefile.am
@@ -761,9 +761,7 @@ check_PROGRAMS = protoc protobuf-test pr
                  protobuf-lite-test test_plugin protobuf-lite-arena-test \
                  no-warning-test $(GZCHECKPROGRAMS)
 protobuf_test_LDADD = $(PTHREAD_LIBS) libprotobuf.la libprotoc.la \
-                      ../gmock/gtest/lib/libgtest.la              \
-                      ../gmock/lib/libgmock.la                    \
-                      ../gmock/lib/libgmock_main.la
+                      -lgtest -lgmock -lgmock_main
 protobuf_test_CPPFLAGS = -I$(srcdir)/../gmock/gtest/include \
                          -I$(srcdir)/../gmock/include
 # Disable optimization for tests unless the user explicitly asked for it,
@@ -854,9 +852,7 @@ nodist_protobuf_test_SOURCES = $(protoc_
 # Run cpp_unittest again with PROTOBUF_TEST_NO_DESCRIPTORS defined.
 protobuf_lazy_descriptor_test_LDADD = $(PTHREAD_LIBS) libprotobuf.la \
                       libprotoc.la                                   \
-                      ../gmock/gtest/lib/libgtest.la                 \
-                      ../gmock/lib/libgmock.la                       \
-                      ../gmock/lib/libgmock_main.la
+                      -lgtest -lgmock -lgmock_main
 protobuf_lazy_descriptor_test_CPPFLAGS = -I$(srcdir)/../gmock/include       \
                                          -I$(srcdir)/../gmock/gtest/include \
                                          -DPROTOBUF_TEST_NO_DESCRIPTORS
@@ -879,9 +875,7 @@ COMMON_LITE_TEST_SOURCES =
 # full runtime and we want to make sure this test builds without full
 # runtime.
 protobuf_lite_test_LDADD = $(PTHREAD_LIBS) libprotobuf-lite.la \
-                           ../gmock/gtest/lib/libgtest.la      \
-                           ../gmock/lib/libgmock.la            \
-                           ../gmock/lib/libgmock_main.la
+                           -lgtest -lgmock -lgmock_main
 protobuf_lite_test_CPPFLAGS= -I$(srcdir)/../gmock/include \
                              -I$(srcdir)/../gmock/gtest/include
 protobuf_lite_test_CXXFLAGS = $(NO_OPT_CXXFLAGS)
@@ -894,9 +888,7 @@ nodist_protobuf_lite_test_SOURCES = $(pr
 # gtest when building the test internally our memory sanitizer doesn't detect
 # memory leaks (don't know why).
 protobuf_lite_arena_test_LDADD = $(PTHREAD_LIBS) libprotobuf-lite.la \
-                      ../gmock/gtest/lib/libgtest.la                 \
-                      ../gmock/lib/libgmock.la                       \
-                      ../gmock/lib/libgmock_main.la
+                      -lgtest -lgmock -lgmock_main
 protobuf_lite_arena_test_CPPFLAGS = -I$(srcdir)/../gmock/include       \
                                     -I$(srcdir)/../gmock/gtest/include
 protobuf_lite_arena_test_CXXFLAGS = $(NO_OPT_CXXFLAGS)
@@ -907,7 +899,7 @@ nodist_protobuf_lite_arena_test_SOURCES
 
 # Test plugin binary.
 test_plugin_LDADD = $(PTHREAD_LIBS) libprotobuf.la libprotoc.la \
-                    ../gmock/gtest/lib/libgtest.la
+                    -lgtest
 test_plugin_CPPFLAGS = -I$(srcdir)/../gmock/gtest/include
 test_plugin_SOURCES =                                          \
   google/protobuf/compiler/mock_code_generator.cc              \
