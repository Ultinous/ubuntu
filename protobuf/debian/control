Source: protobuf
Section: devel
Priority: optional
Maintainer: Lengyel Zsolt <zsolt@ultinous.com>
Build-Depends: debhelper (>=9), dh-autoreconf, build-essential, autoconf, automake, libtool, curl, make, g++, zlib1g-dev, unzip, ca-certificates, default-jdk, maven
Standards-Version: 3.9.6

Package: libprotobuf15
Architecture: any
Multi-Arch: same
Section: libs
Depends: ${shlibs:Depends}, ${misc:Depends}
Conflicts: libprotobuf15
Replaces: libprotobuf15
Description: protocol buffers C++ library
 Protocol buffers are a flexible, efficient, automated mechanism for
 serializing structured data - similar to XML, but smaller, faster, and
 simpler. You define how you want your data to be structured once, then you can
 use special generated source code to easily write and read your structured
 data to and from a variety of data streams and using a variety of languages.
 You can even update your data structure without breaking deployed programs
 that are compiled against the "old" format.
 .
 Google uses Protocol Buffers for almost all of its internal RPC protocols and
 file formats.
 .
 This package contains the runtime library needed for C++ applications.

Package: libprotobuf-lite15
Architecture: any
Multi-Arch: same
Section: libs
Depends: ${shlibs:Depends}, ${misc:Depends}
Conflicts: libprotobuf-lite15
Replaces: libprotobuf-lite15
Description: protocol buffers C++ library (lite version)
 Protocol buffers are a flexible, efficient, automated mechanism for
 serializing structured data - similar to XML, but smaller, faster, and
 simpler. You define how you want your data to be structured once, then you can
 use special generated source code to easily write and read your structured
 data to and from a variety of data streams and using a variety of languages.
 You can even update your data structure without breaking deployed programs
 that are compiled against the "old" format.
 .
 Google uses Protocol Buffers for almost all of its internal RPC protocols and
 file formats.
 .
 This package contains the runtime library needed for C++ applications whose
 message definitions have the "lite runtime" optimization setting.

Package: libprotobuf-dev
Architecture: any
Multi-Arch: same
Section: libdevel
Depends: ${misc:Depends}, zlib1g-dev, libprotobuf15 (= ${binary:Version}), libprotobuf-lite15 (= ${binary:Version})
Description: protocol buffers C++ library (development files)
 Protocol buffers are a flexible, efficient, automated mechanism for
 serializing structured data - similar to XML, but smaller, faster, and
 simpler. You define how you want your data to be structured once, then you can
 use special generated source code to easily write and read your structured
 data to and from a variety of data streams and using a variety of languages.
 You can even update your data structure without breaking deployed programs
 that are compiled against the "old" format.
 .
 Google uses Protocol Buffers for almost all of its internal RPC protocols and
 file formats.
 .
 This package contains the development headers and static libraries needed for
 writing C++ applications.

Package: libprotoc15
Architecture: any
Multi-Arch: same
Section: libs
Depends: ${shlibs:Depends}, ${misc:Depends}
Conflicts: libprotoc15
Replaces: libprotoc15
Description: protocol buffers compiler library
 Protocol buffers are a flexible, efficient, automated mechanism for
 serializing structured data - similar to XML, but smaller, faster, and
 simpler. You define how you want your data to be structured once, then you can
 use special generated source code to easily write and read your structured
 data to and from a variety of data streams and using a variety of languages.
 You can even update your data structure without breaking deployed programs
 that are compiled against the "old" format.
 .
 Google uses Protocol Buffers for almost all of its internal RPC protocols and
 file formats.
 .
 This package contains the runtime library needed for the protocol buffer
 compiler.

Package: libprotoc-dev
Architecture: any
Multi-Arch: same
Section: libdevel
Depends: ${misc:Depends}, libprotoc15 (= ${binary:Version}), libprotobuf-dev (= ${binary:Version})
Replaces: libprotobuf-dev (<< 2.1.0)
Breaks: libprotobuf-dev (<< 2.1.0)
Description: protocol buffers compiler library (development files)
 Protocol buffers are a flexible, efficient, automated mechanism for
 serializing structured data - similar to XML, but smaller, faster, and
 simpler. You define how you want your data to be structured once, then you can
 use special generated source code to easily write and read your structured
 data to and from a variety of data streams and using a variety of languages.
 You can even update your data structure without breaking deployed programs
 that are compiled against the "old" format.
 .
 Google uses Protocol Buffers for almost all of its internal RPC protocols and
 file formats.
 .
 This package contains the development headers and static library needed for
 writing protobuf compilers.

Package: protobuf-compiler
Architecture: any
Multi-Arch: foreign
Depends: ${shlibs:Depends}, ${misc:Depends}, libprotoc15 (= ${binary:Version})
Description: compiler for protocol buffer definition files
 Protocol buffers are a flexible, efficient, automated mechanism for
 serializing structured data - similar to XML, but smaller, faster, and
 simpler. You define how you want your data to be structured once, then you can
 use special generated source code to easily write and read your structured
 data to and from a variety of data streams and using a variety of languages.
 You can even update your data structure without breaking deployed programs
 that are compiled against the "old" format.
 .
 Google uses Protocol Buffers for almost all of its internal RPC protocols and
 file formats.
 .
 This package contains the protocol buffer compiler that is used for
 translating from .proto files (containing the definitions) to the language
 binding for the supported languages.

Package: libprotobuf-java
Architecture: all
Depends: ${misc:Depends}
Section: java
Description: Java bindings for protocol buffers
 Protocol buffers are a flexible, efficient, automated mechanism for
 serializing structured data - similar to XML, but smaller, faster, and
 simpler. You define how you want your data to be structured once, then you can
 use special generated source code to easily write and read your structured
 data to and from a variety of data streams and using a variety of languages.
 You can even update your data structure without breaking deployed programs
 that are compiled against the "old" format.
 .
 Google uses Protocol Buffers for almost all of its internal RPC protocols and
 file formats.
 .
 This package contains the Java bindings for the protocol buffers. You will
 need the protoc tool (in the protobuf-compiler package) to compile your
 definition to Java classes, and then the modules in this package will allow
 you to use those classes in your programs.

